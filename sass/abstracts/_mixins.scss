@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin center-horizontal-vertical {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/* 
0 - 600px :         Phone
600 - 900px:        Tablet Portrait
900 - 1200px:       Tablet Landscape

[1200 - 1800px]: is where our normal styles apply

1800px + :          Big Desktop
*/

@mixin respond-phone {
  @media (max-width: 600px) {
    @content; // content directive, that allows us to parse a block of code into a mixin
  }
}



// a mixin for all our breakpoints, with if statement
/* 
$breakpoint argument choices: 
  - phone
  - tab-port
  - tab-land
  - big-desktop 

  1em = 16px

*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em){ @content;}  // 600px / 16
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) { @content;}  // 900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) { @content;}  // 1200
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em){ @content;}  // 1800
  }
}

// EMs and REMs IN MEDIA QUERIES ARE NON AFFECTED BA A ROOT FONT-SIZE SETTING, MEANING THAT 1REM O 1EM IN A MED QUE IS ALWAYS JUST EQUAL TO THE FONT-SIZE WHICH IS COMING FROM THE BROWSER, WHICH IS BY DEFAULT 16PX, BUT IF THE USER CHANGE IT TO 20PX NO MATTER WHAT WE HAVE SET, IS GONNA REFERENCE THAT. WE ARE GOING TO USE EM BECAUSE REMs FAILED TP WORK AS INTENDED IN SOME OF THE BROWSERS. CONCLUSION EMs ARE THE BEST OPTION FOR MEDIA QUERIES.


//ORDER to media queries : Base + Typography > general layout + grid > page layout > components


